// Generated by view binder compiler. Do not edit!
package com.example.acme.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.acme.R;
import com.google.android.material.appbar.AppBarLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final AppBarLayout appBar;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final Guideline bottomToolbarGuideline;

  @NonNull
  public final ImageView calendarImage;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final TextView calendarText;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final ConstraintLayout constraintLayout;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final Guideline div1;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final Guideline div2;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final Guideline div3;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final Guideline div4;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final TextView headerText;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final ImageView imageView2;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final LinearLayout menu;

  @NonNull
  public final ImageView menuImage;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final TextView menuText;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final Guideline midToolbarGuideline;

  @NonNull
  public final RecyclerView myRecyclerView;

  @NonNull
  public final ImageView newTicket;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final TextView newTicketText;

  @NonNull
  public final ImageView syncImage;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final TextView syncText;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final Toolbar toolbar;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final TextView toolbarTitle;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final Guideline topToolbarGuideline;

  private ActivityMainBinding(@NonNull View rootView, @Nullable AppBarLayout appBar,
      @Nullable Guideline bottomToolbarGuideline, @NonNull ImageView calendarImage,
      @Nullable TextView calendarText, @Nullable ConstraintLayout constraintLayout,
      @Nullable Guideline div1, @Nullable Guideline div2, @Nullable Guideline div3,
      @Nullable Guideline div4, @Nullable TextView headerText, @Nullable ImageView imageView2,
      @Nullable LinearLayout menu, @NonNull ImageView menuImage, @Nullable TextView menuText,
      @Nullable Guideline midToolbarGuideline, @NonNull RecyclerView myRecyclerView,
      @NonNull ImageView newTicket, @Nullable TextView newTicketText, @NonNull ImageView syncImage,
      @Nullable TextView syncText, @Nullable Toolbar toolbar, @Nullable TextView toolbarTitle,
      @Nullable Guideline topToolbarGuideline) {
    this.rootView = rootView;
    this.appBar = appBar;
    this.bottomToolbarGuideline = bottomToolbarGuideline;
    this.calendarImage = calendarImage;
    this.calendarText = calendarText;
    this.constraintLayout = constraintLayout;
    this.div1 = div1;
    this.div2 = div2;
    this.div3 = div3;
    this.div4 = div4;
    this.headerText = headerText;
    this.imageView2 = imageView2;
    this.menu = menu;
    this.menuImage = menuImage;
    this.menuText = menuText;
    this.midToolbarGuideline = midToolbarGuideline;
    this.myRecyclerView = myRecyclerView;
    this.newTicket = newTicket;
    this.newTicketText = newTicketText;
    this.syncImage = syncImage;
    this.syncText = syncText;
    this.toolbar = toolbar;
    this.toolbarTitle = toolbarTitle;
    this.topToolbarGuideline = topToolbarGuideline;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBar;
      AppBarLayout appBar = ViewBindings.findChildViewById(rootView, id);

      id = R.id.bottom_toolbar_guideline;
      Guideline bottomToolbarGuideline = ViewBindings.findChildViewById(rootView, id);

      id = R.id.calendar_image;
      ImageView calendarImage = ViewBindings.findChildViewById(rootView, id);
      if (calendarImage == null) {
        break missingId;
      }

      id = R.id.calendar_text;
      TextView calendarText = ViewBindings.findChildViewById(rootView, id);

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);

      id = R.id.div1;
      Guideline div1 = ViewBindings.findChildViewById(rootView, id);

      id = R.id.div2;
      Guideline div2 = ViewBindings.findChildViewById(rootView, id);

      id = R.id.div3;
      Guideline div3 = ViewBindings.findChildViewById(rootView, id);

      id = R.id.div4;
      Guideline div4 = ViewBindings.findChildViewById(rootView, id);

      id = R.id.header_text;
      TextView headerText = ViewBindings.findChildViewById(rootView, id);

      id = R.id.imageView2;
      ImageView imageView2 = ViewBindings.findChildViewById(rootView, id);

      id = R.id.menu;
      LinearLayout menu = ViewBindings.findChildViewById(rootView, id);

      id = R.id.menu_image;
      ImageView menuImage = ViewBindings.findChildViewById(rootView, id);
      if (menuImage == null) {
        break missingId;
      }

      id = R.id.menu_text;
      TextView menuText = ViewBindings.findChildViewById(rootView, id);

      id = R.id.mid_toolbar_guideline;
      Guideline midToolbarGuideline = ViewBindings.findChildViewById(rootView, id);

      id = R.id.my_recycler_view;
      RecyclerView myRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (myRecyclerView == null) {
        break missingId;
      }

      id = R.id.new_ticket;
      ImageView newTicket = ViewBindings.findChildViewById(rootView, id);
      if (newTicket == null) {
        break missingId;
      }

      id = R.id.new_ticket_text;
      TextView newTicketText = ViewBindings.findChildViewById(rootView, id);

      id = R.id.sync_image;
      ImageView syncImage = ViewBindings.findChildViewById(rootView, id);
      if (syncImage == null) {
        break missingId;
      }

      id = R.id.sync_text;
      TextView syncText = ViewBindings.findChildViewById(rootView, id);

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);

      id = R.id.toolbar_title;
      TextView toolbarTitle = ViewBindings.findChildViewById(rootView, id);

      id = R.id.top_toolbar_guideline;
      Guideline topToolbarGuideline = ViewBindings.findChildViewById(rootView, id);

      return new ActivityMainBinding(rootView, appBar, bottomToolbarGuideline, calendarImage,
          calendarText, constraintLayout, div1, div2, div3, div4, headerText, imageView2, menu,
          menuImage, menuText, midToolbarGuideline, myRecyclerView, newTicket, newTicketText,
          syncImage, syncText, toolbar, toolbarTitle, topToolbarGuideline);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
