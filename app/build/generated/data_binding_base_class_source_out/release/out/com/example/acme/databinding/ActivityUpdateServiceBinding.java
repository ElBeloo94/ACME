// Generated by view binder compiler. Do not edit!
package com.example.acme.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.acme.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUpdateServiceBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final EditText adressUpdate;

  @NonNull
  public final AppCompatButton deleteUpdate;

  @NonNull
  public final EditText deptUpdate;

  @NonNull
  public final EditText dispatchNoteUpdate;

  @NonNull
  public final EditText fechaUpdate;

  @NonNull
  public final EditText nameUpdate;

  @NonNull
  public final EditText reasonCallUpdate;

  @NonNull
  public final EditText typeUpdate;

  @NonNull
  public final AppCompatButton update;

  @NonNull
  public final EditText userPhoneUpdate;

  private ActivityUpdateServiceBinding(@NonNull NestedScrollView rootView,
      @NonNull EditText adressUpdate, @NonNull AppCompatButton deleteUpdate,
      @NonNull EditText deptUpdate, @NonNull EditText dispatchNoteUpdate,
      @NonNull EditText fechaUpdate, @NonNull EditText nameUpdate,
      @NonNull EditText reasonCallUpdate, @NonNull EditText typeUpdate,
      @NonNull AppCompatButton update, @NonNull EditText userPhoneUpdate) {
    this.rootView = rootView;
    this.adressUpdate = adressUpdate;
    this.deleteUpdate = deleteUpdate;
    this.deptUpdate = deptUpdate;
    this.dispatchNoteUpdate = dispatchNoteUpdate;
    this.fechaUpdate = fechaUpdate;
    this.nameUpdate = nameUpdate;
    this.reasonCallUpdate = reasonCallUpdate;
    this.typeUpdate = typeUpdate;
    this.update = update;
    this.userPhoneUpdate = userPhoneUpdate;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUpdateServiceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUpdateServiceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_update_service, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUpdateServiceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.adressUpdate;
      EditText adressUpdate = ViewBindings.findChildViewById(rootView, id);
      if (adressUpdate == null) {
        break missingId;
      }

      id = R.id.deleteUpdate;
      AppCompatButton deleteUpdate = ViewBindings.findChildViewById(rootView, id);
      if (deleteUpdate == null) {
        break missingId;
      }

      id = R.id.deptUpdate;
      EditText deptUpdate = ViewBindings.findChildViewById(rootView, id);
      if (deptUpdate == null) {
        break missingId;
      }

      id = R.id.dispatchNoteUpdate;
      EditText dispatchNoteUpdate = ViewBindings.findChildViewById(rootView, id);
      if (dispatchNoteUpdate == null) {
        break missingId;
      }

      id = R.id.fechaUpdate;
      EditText fechaUpdate = ViewBindings.findChildViewById(rootView, id);
      if (fechaUpdate == null) {
        break missingId;
      }

      id = R.id.nameUpdate;
      EditText nameUpdate = ViewBindings.findChildViewById(rootView, id);
      if (nameUpdate == null) {
        break missingId;
      }

      id = R.id.reasonCallUpdate;
      EditText reasonCallUpdate = ViewBindings.findChildViewById(rootView, id);
      if (reasonCallUpdate == null) {
        break missingId;
      }

      id = R.id.typeUpdate;
      EditText typeUpdate = ViewBindings.findChildViewById(rootView, id);
      if (typeUpdate == null) {
        break missingId;
      }

      id = R.id.update;
      AppCompatButton update = ViewBindings.findChildViewById(rootView, id);
      if (update == null) {
        break missingId;
      }

      id = R.id.userPhoneUpdate;
      EditText userPhoneUpdate = ViewBindings.findChildViewById(rootView, id);
      if (userPhoneUpdate == null) {
        break missingId;
      }

      return new ActivityUpdateServiceBinding((NestedScrollView) rootView, adressUpdate,
          deleteUpdate, deptUpdate, dispatchNoteUpdate, fechaUpdate, nameUpdate, reasonCallUpdate,
          typeUpdate, update, userPhoneUpdate);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
